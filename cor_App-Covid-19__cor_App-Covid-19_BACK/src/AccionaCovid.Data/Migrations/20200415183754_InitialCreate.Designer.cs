// <auto-generated />
using System;
using AccionaCovid.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccionaCovid.Data.Migrations
{
    [DbContext(typeof(AccionaCovidContext))]
    [Migration("20200415183754_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccionaCovid.Domain.Model.Accion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accion");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.AlertaEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("AlertaEmpleado");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.AlertaServiciosMedicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("AlertaServiciosMedicos");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.Audits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int?>("KeyValues")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.CentroTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CentroTrabajo");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<int?>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("IdFichaLaboral")
                        .HasColumnType("int");

                    b.Property<int>("IdFichaMedica")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumEmpleado")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaModif")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdFichaLaboral");

                    b.HasIndex("IdFichaMedica");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.EntregaEquipoProteccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipoProteccion")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEquipoProteccion");

                    b.ToTable("EntregaEquipoProteccion");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.EquipoProteccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipoProteccion");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.EstadoPasaporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoPasaporte");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.EvaluacionFactoresRiesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdFichaMedica")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdFichaMedica");

                    b.ToTable("EvaluacionFactoresRiesgo");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.FactorRiesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FactorRiesgo");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.FichaLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdCentroTrabajo")
                        .HasColumnType("int");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdDivision")
                        .HasColumnType("int");

                    b.Property<int>("IdResponsableDirecto")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCentroTrabajo");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdDivision");

                    b.ToTable("FichaLaboral");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.FichaMedica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FichaMedica");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ParametroMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdTipoParametro")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoParametro");

                    b.ToTable("ParametroMedico");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.Pasaporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaExpiracion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAccion")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoPasaporte")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdAccion");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEstadoPasaporte");

                    b.ToTable("Pasaporte");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ResultadoEncuestaSintomas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdFichaMedica")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoSintoma")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Valor")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdFichaMedica");

                    b.HasIndex("IdTipoSintoma");

                    b.ToTable("ResultadoEncuestaSintomas");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ResultadoTestMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Control")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaTest")
                        .HasColumnType("datetime");

                    b.Property<int>("IdFichaMedica")
                        .HasColumnType("int");

                    b.Property<int>("IdTestMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<bool>("Igg")
                        .HasColumnName("IGG")
                        .HasColumnType("bit");

                    b.Property<bool>("Igm")
                        .HasColumnName("IGM")
                        .HasColumnType("bit");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdFichaMedica");

                    b.HasIndex("IdTestMedico");

                    b.ToTable("ResultadoTestMedico");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.SeguimientoMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdFichaMedica")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdFichaMedica");

                    b.ToTable("SeguimientoMedico");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.TestMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestMedico");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.TipoParametroMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoParametroMedico");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.TipoSintomas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoSintomas");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ValoracionFactorRiesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdEvaluacionFactoresRiesgo")
                        .HasColumnType("int");

                    b.Property<int>("IdFactorRiesgo")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEvaluacionFactoresRiesgo");

                    b.HasIndex("IdFactorRiesgo");

                    b.ToTable("ValoracionFactorRiesgo");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ValoracionParametroMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("IdParametroMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdSegumientoMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("LastActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdParametroMedico");

                    b.HasIndex("IdSegumientoMedico");

                    b.ToTable("ValoracionParametroMedico");
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.AlertaEmpleado", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.Empleado", "IdEmpleadoNavigation")
                        .WithMany("AlertaEmpleado")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("FK_AlertaEmpleado_Empleado")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.AlertaServiciosMedicos", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.Empleado", "IdEmpleadoNavigation")
                        .WithMany("AlertaServiciosMedicos")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("FK_AlertaServiciosMedicos_Empleado")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.Empleado", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.FichaLaboral", "IdFichaLaboralNavigation")
                        .WithMany("Empleado")
                        .HasForeignKey("IdFichaLaboral")
                        .HasConstraintName("FK_Empleado_FichaLaboral")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.FichaMedica", "IdFichaMedicaNavigation")
                        .WithMany("Empleado")
                        .HasForeignKey("IdFichaMedica")
                        .HasConstraintName("FK_Empleado_FichaMedica")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.Usuario", "IdUsuarioNavigation")
                        .WithMany("Empleado")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Empleado_Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.EntregaEquipoProteccion", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.Empleado", "IdEmpleadoNavigation")
                        .WithMany("EntregaEquipoProteccion")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("FK_EntregaEquipoProteccion_Empleado")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.EquipoProteccion", "IdEquipoProteccionNavigation")
                        .WithMany("EntregaEquipoProteccion")
                        .HasForeignKey("IdEquipoProteccion")
                        .HasConstraintName("FK_EntregaEquipoProteccion_EquipoProteccion")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.EvaluacionFactoresRiesgo", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.FichaMedica", "IdFichaMedicaNavigation")
                        .WithMany("EvaluacionFactoresRiesgo")
                        .HasForeignKey("IdFichaMedica")
                        .HasConstraintName("FK_EvaluacionFactoresRiesgo_FichaMedica")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.FichaLaboral", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.CentroTrabajo", "IdCentroTrabajoNavigation")
                        .WithMany("FichaLaboral")
                        .HasForeignKey("IdCentroTrabajo")
                        .HasConstraintName("FK_FichaLaboral_CentroTrabajo")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.Departamento", "IdDepartamentoNavigation")
                        .WithMany("FichaLaboral")
                        .HasForeignKey("IdDepartamento")
                        .HasConstraintName("FK_FichaLaboral_Departamento")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.Division", "IdDivisionNavigation")
                        .WithMany("FichaLaboral")
                        .HasForeignKey("IdDivision")
                        .HasConstraintName("FK_FichaLaboral_Division")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ParametroMedico", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.TipoParametroMedico", "IdTipoParametroNavigation")
                        .WithMany("ParametroMedico")
                        .HasForeignKey("IdTipoParametro")
                        .HasConstraintName("FK_ParametroMedico_TipoParametroMedico")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.Pasaporte", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.Accion", "IdAccionNavigation")
                        .WithMany("Pasaporte")
                        .HasForeignKey("IdAccion")
                        .HasConstraintName("FK_Pasaporte_Accion")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Pasaporte")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("FK_Pasaporte_Empleado")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.EstadoPasaporte", "IdEstadoPasaporteNavigation")
                        .WithMany("Pasaporte")
                        .HasForeignKey("IdEstadoPasaporte")
                        .HasConstraintName("FK_Pasaporte_EstadoPasaporte")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ResultadoEncuestaSintomas", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.FichaMedica", "IdFichaMedicaNavigation")
                        .WithMany("ResultadoEncuestaSintomas")
                        .HasForeignKey("IdFichaMedica")
                        .HasConstraintName("FK_ResultadoEncuestaSintomas_FichaMedica")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.TipoSintomas", "IdTipoSintomaNavigation")
                        .WithMany("ResultadoEncuestaSintomas")
                        .HasForeignKey("IdTipoSintoma")
                        .HasConstraintName("FK_ResultadoEncuestaSintomas_TipoSintomas")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ResultadoTestMedico", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.FichaMedica", "IdFichaMedicaNavigation")
                        .WithMany("ResultadoTestMedico")
                        .HasForeignKey("IdFichaMedica")
                        .HasConstraintName("FK_ResultadoTestMedico_FichaMedica")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.TestMedico", "IdTestMedicoNavigation")
                        .WithMany("ResultadoTestMedico")
                        .HasForeignKey("IdTestMedico")
                        .HasConstraintName("FK_ResultadoTestMedico_TestMedico")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.SeguimientoMedico", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.FichaMedica", "IdFichaMedicaNavigation")
                        .WithMany("SeguimientoMedico")
                        .HasForeignKey("IdFichaMedica")
                        .HasConstraintName("FK_SeguimientoMedico_FichaMedica")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ValoracionFactorRiesgo", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.EvaluacionFactoresRiesgo", "IdEvaluacionFactoresRiesgoNavigation")
                        .WithMany("ValoracionFactorRiesgo")
                        .HasForeignKey("IdEvaluacionFactoresRiesgo")
                        .HasConstraintName("FK_ValoracionFactorRiesgo_EvaluacionFactoresRiesgo")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.FactorRiesgo", "IdFactorRiesgoNavigation")
                        .WithMany("ValoracionFactorRiesgo")
                        .HasForeignKey("IdFactorRiesgo")
                        .HasConstraintName("FK_ValoracionFactorRiesgo_FactorRiesgo")
                        .IsRequired();
                });

            modelBuilder.Entity("AccionaCovid.Domain.Model.ValoracionParametroMedico", b =>
                {
                    b.HasOne("AccionaCovid.Domain.Model.ParametroMedico", "IdParametroMedicoNavigation")
                        .WithMany("ValoracionParametroMedico")
                        .HasForeignKey("IdParametroMedico")
                        .HasConstraintName("FK_ValoracionParametroMedico_ParametroMedico")
                        .IsRequired();

                    b.HasOne("AccionaCovid.Domain.Model.SeguimientoMedico", "IdSegumientoMedicoNavigation")
                        .WithMany("ValoracionParametroMedico")
                        .HasForeignKey("IdSegumientoMedico")
                        .HasConstraintName("FK_ValoracionParametroMedico_SeguimientoMedico")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
